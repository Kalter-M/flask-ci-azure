version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run:
          name: Setup Env
          command: |
            echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            echo 'export IMAGE_NAME=flask-ci-azure' >> $BASH_ENV
            echo 'export AZ_REGISTRY_URL="flaskciazure.azurecr.io"' >> $BASH_ENV
            echo 'export REMOTE_TAG="${AZ_REGISTRY_URL}/${AZ_REGISTRY_USER}/${IMAGE_NAME}:${TAG}"' >> $BASH_ENV
            python3 -m venv venv
            . venv/bin/activate
            pip install --no-cache-dir -r requirements.txt
      - run:
          name: Run Tests
          command: |
            . venv/bin/activate
            python tests.py
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build Docker image
          command: |
            . venv/bin/activate
            docker build --rm=true -t $IMAGE_NAME:$TAG .
      - run:
          name: Push Docker Image
          command: |
            docker login -u ${AZ_REGISTRY_USER} -p ${AZ_REGISTRY_PASSWORD} ${AZ_REGISTRY_URL}
            docker tag ${IMAGE_NAME}:${TAG} ${REMOTE_TAG}
            docker push ${REMOTE_TAG}
      - run:
          name: Setup Azure CLI
          command: |
            sudo apt-get update && sudo apt-get install curl apt-transport-https lsb-release gpg
            curl -sL https://packages.microsoft.com/keys/microsoft.asc | \
                gpg --dearmor | \
                sudo tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null
            AZ_REPO=$(lsb_release -cs)
            echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main" | \
                sudo tee /etc/apt/sources.list.d/azure-cli.list
            sudo apt-get update && sudo apt-get install azure-cli
            az login
#            . venv/bin/activate
#            pyinstaller -F simpleapi.py
#            docker build -t Kalter-M/$IMAGE_NAME:$TAG .
#            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
#            docker push Kalter-M/$IMAGE_NAME:$TAG
#      - run:
#          name: Deploy app to Digital Ocean Server via Docker
#          command: |
#            ssh -o StrictHostKeyChecking=no root@hello.dpunks.org "/bin/bash ./deploy_app.sh ariv3ra/$IMAGE_NAME:$TAG"